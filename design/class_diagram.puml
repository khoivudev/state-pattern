@startuml

class GumballMachine {
    count
    state
    refill()
    insertQuarter()
    ejectQuarter()
    turnCrank()
    dispense()

}

GumballMachine --> State

interface State {
    insertQuarter()
    ejectQuarter()
    turnCrank()
    dispense()
}

class HasQuarterState implements State {
    insertQuarter()
    ejectQuarter()
    turnCrank()
    dispense()
}

class NoQuarterState implements State {
    insertQuarter()
    ejectQuarter()
    turnCrank()
    dispense()
}

class SoldState implements State {
    insertQuarter()
    ejectQuarter()
    turnCrank()
    dispense()
}

class WinnerState implements State {
    insertQuarter()
    ejectQuarter()
    turnCrank()
    dispense()
}

class SoldOutState implements State {
    insertQuarter()
    ejectQuarter()
    turnCrank()
    dispense()
}

@enduml